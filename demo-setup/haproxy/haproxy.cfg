global
    master-worker
    stats socket /run/haproxy.sock user root group root mode 660 level admin
    daemon
    log /dev/log local0
    log localhost local1 notice
    maxconn 2000

defaults
    log global
    mode http
    option httplog
    option dontlognull
    retries 3
    timeout connect 5000
    timeout client 50000
    timeout server 50000

frontend stick_ratelimiting_api
    stick-table type ip size 10 expire 10s store http_req_rate(10s)

frontend http-in
    mode http
    bind *:8081
    http-request use-service prometheus-exporter if { path /metrics }
    http-request track-sc0 src table stick_ratelimiting_api

    # Check map file to get rate limit for path
    http-request set-var(req.rate_limit) str(rate_limit),map_beg(/etc/haproxy/maps/ratelimit.map,500)

    # Client's request rate is tracked
    http-request set-var(req.request_rate)  sc_http_req_rate(0)

    acl rate_abuse var(req.rate_limit),sub(req.request_rate) lt 0

    http-response set-header X-RateLimit %[sc_http_req_rate(0)]
    http-response set-header X-RateLimit-Capacity %[str(rate_limit),map_beg(/etc/haproxy/maps/ratelimit.map,500)]

    # Deny if rate abuse
    http-request deny deny_status 429 if rate_abuse


    use_backend webservers

frontend stats
   bind *:8404
   option http-use-htx
   stats enable
   stats uri /
   http-request use-service prometheus-exporter if { path /metrics }
   stats refresh 10s

resolvers consul
   nameserver consul consul-server:8600
   accepted_payload_size 8192
   hold valid 5s

backend webservers
   mode http
   balance roundrobin
   option httpchk /ready-check
   option forwardfor
   option http-server-close
   server-template demoserver- 10 demo.service.consul.:80 check resolvers consul resolve-prefer ipv4


program dataplane-api
    command /usr/local/bin/dataplaneapi -f /etc/haproxy/dataplaneapi.yaml
    no option start-on-reload
